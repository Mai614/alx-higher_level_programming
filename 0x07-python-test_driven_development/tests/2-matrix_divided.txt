>>> from my_module import matrix_divided

# Test case 1: Testing division of matrix by a number
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test case 2: Testing division of matrix by a different number
>>> matrix = [[3, 6, 9], [12, 15, 18]]
>>> matrix_divided(matrix, 2)
[[1.5, 3.0, 4.5], [6.0, 7.5, 9.0]]

# Test case 3: Testing division of matrix by a negative number
>>> matrix = [[2, 4, 6], [8, 10, 12]]
>>> matrix_divided(matrix, -2)
[[-1.0, -2.0, -3.0], [-4.0, -5.0, -6.0]]

# Test case 4: Testing division of empty matrix
>>> matrix = []
>>> matrix_divided(matrix, 5)
[]

# Test case 5: Testing division of matrix with zero as div
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test case 6: Testing division of non-numeric div
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 'abc')
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Test case 7: Testing division of non-matrix input
>>> matrix = [1, 2, 3]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test case 8: Testing matrix with different row sizes
>>> matrix = [[1, 2, 3], [4, 5]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
